
/* This file is the descriptor for the python runnable sentiment-api */
{
    /* Meta data for display purposes */
    "meta": {
        "label": "Image classification endpoint",
        "description": "Add an api endpoint for an image classification model trained with the deeplearning-image plugin",
        "icon": "icon-puzzle-piece"
    },

    /* whether the runnable's code is untrusted */
    "impersonate": false,

    /* list of required permissions on the project to see/run the runnable */
    "permissions": ["WRITE_CONF"],

    /* what the code's run() returns:
       - NONE : no result
       - HTML : a string that is a html (utf8 encoded)
       - FOLDER_FILE : a (folderId, path) pair to a file in a folder of this project (json-encoded)
       - FILE : raw data (as a python string) that will be stored in a temp file by DSS
       - URL : a url
     */
    "resultType": "HTML",

    /* label to use when the runnable's result is not inlined in the UI (ex: for urls) */
    "resultLabel": "API service",

    /* Macro roles define where this macro will appear in DSS GUI. They are used to pre-fill a macro parameter with context.

       Each role consists of:
        - type: where the macro will be shown
            * when selecting DSS object(s): DATASET, DATASETS, API_SERVICE, API_SERVICE_VERSION, BUNDLE, VISUAL_ANALYSIS, SAVED_MODEL, MANAGED_FOLDER
            * in the global project list: PROJECT_MACROS
        - targetParamsKey(s): name of the parameter(s) that will be filled with the selected object
    */
    "macroRoles": [
        {
            "type": "MANAGED_FOLDER",
            "targetParamsKey": "model_folder_id"
        }
    ],

    /* The field "params" holds a list of all the params
       for wich the user will be prompted for values:

       The available parameter types are:
       STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, TEXTAREA,
       DATASET, DATASETS, API_SERVICE, API_SERVICE_VERSION, BUNDLE, VISUAL_ANALYSIS, SAVED_MODEL, MANAGED_FOLDER
    */
    
    "params": [
        {
            "name": "sep1",
            "label": "Model folder",
            "type": "SEPARATOR"
        },
        {
            "name": "model_folder_id",
            "type": "MANAGED_FOLDER",
            "label": "Folder name",
            "description": "Name of the image classification model folder"
        },
        {
            "name": "sep2",
            "label": "API service",
            "type": "SEPARATOR"
        },
        {
            "name": "create_new_service",
            "type": "BOOLEAN",
            "label": "Create new API service",
            "mandatory": true,
            "defaultValue": false
        },
        {
            "name": "service_id_new",
            "type": "STRING",
            "label": "API service ID",
            "visibilityCondition" : "model.create_new_service",
            "mandatory": true
        },
        {
            "name": "service_id_existing",
            "type": "API_SERVICE",
            "label": "API service ID",
            "visibilityCondition" : "!model.create_new_service",
            "mandatory": true
        },
        {
            "name": "endpoint_id",
            "type": "STRING",
            "label": "Endpoint unique ID",
            "mandatory": true
        },
        {
            "name": "use_gpu",
            "type": "BOOLEAN",
            "label": "GPU deployment mode",
            "mandatory": true,
            "defaultValue": false
        },
        {
            "name": "sep4",
            "label": "Params model results",
            "type": "SEPARATOR"
        },
        {
            "name": "max_nb_labels",
            "type": "INT",
            "label": "Max number of class labels",
            "defaultValue": 5,
            "mandatory": true
        },
        {
            "name": "min_threshold",
            "type": "DOUBLE",
            "label": "Min probability threshold",
            "description": "Class labels less probable than this threshold (between 0 and 1) will not be output",
            "defaultValue": 0.1,
            "mandatory": true
        }
        
        
        
    ]
}