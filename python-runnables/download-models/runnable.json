{
    /* Meta data for display purposes */
    "meta" : {
        "label" : "Download pre-trained model",
        "description" : "Use this macro to download model files to your project.",
        "icon" : "icon-cloud-download"
    },

    /* whether the runnable's code is untrusted */
    "impersonate" : false,
    
    /* list of required permissions on the project to see/run the runnable */
    "permissions" : ["WRITE_CONF"],

    /* what the code's run() returns:
       - NONE : no result
       - HTML : a string that is a html (utf8 encoded)
       - FOLDER_FILE : a (folderId, path) pair to a file in a folder of this project (json-encoded)
       - FILE : raw data (as a python string) that will be stored in a temp file by DSS
       - URL : a url
     */    
    "resultType" : "HTML",
    
    /* label to use when the runnable's result is not inlined in the UI (ex: for urls) */
    "resultLabel" : "model download output",
    
    /* for FILE resultType, the extension to use for the temp file */
/*    "extension" : "txt",*/
    
    /* for FILE resultType, the type of data stored in the temp file */
/*    "mimeType" : "text/plain",*/

    /* The field "params" holds a list of all the params
       for wich the user will be prompted for values:

       The available parameter types are:
       STRING, INT, DOUBLE, BOOLEAN, PASSWORD, SELECT, MAP, TEXTAREA
    */
    
    "params": [
        {
            "name": "outputName",
            "label" : "Output folder name",
            "type": "STRING",
            "description":"Use a different folder for each downloaded model.",
            "mandatory" : true
        },
        
        /* A "SELECT" parameter is a multi-choice selector. Choices are specified using the selectChoice field*/
        {
            "name": "model",
            "label": "Pre-trained model to download",
            "type": "SELECT",
            "selectChoices": [
                {
                    "label": "Resnet trained on Imagenet",
                    "value": "resnet_imagenet"
                },
                {
                    "label": "Xception trained on Imagenet",
                    "value": "xception_imagenet"
                },
                {
                    "label": "Inception V3 trained on Imagenet",
                    "value": "inceptionv3_imagenet"
                },
                {
                    "label": "VGG16 trained on Imagenet",
                    "value": "vgg16_imagenet"
                }
                /* Add other models here, e.g. the ones trained by Dataiku*/
            ],
            "defaultValue": "resnet_imagenet",
            "mandatory": true
        }
    ]
}
